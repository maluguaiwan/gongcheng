<?php/** * 微信支付插件 */use think\Model;/** * 支付 逻辑定义 * Class * @package Home\Payment */class weixin extends Model{    public $tableName = 'plugin'; // 插件表    public $alipay_config = array();// 支付宝支付配置参数    /**     * 析构流函数     */    public function  __construct() {        require_once("lib/WxPay.Api.php"); // 微信扫码支付demo 中的文件        require_once("example/WxPay.NativePay.php");        require_once("example/WxPay.JsApiPay.php");        //$where['code']=['eq','weixin'];        //$where['type']=['eq','payment'];        //$paymentPlugin = \think\Db::name('plugin')->where($where)->find(); // 找到微信支付插件的配置        //$config_value = unserialize($paymentPlugin['config_value']); // 配置反序列化//        WxPayConfig::$appid = 'wx8fce20d8d7ccc673'; // * APPID：绑定支付的APPID（必须配置，开户邮件中可查看）//        WxPayConfig::$mchid = '1316126101'; // * MCHID：商户号（必须配置，开户邮件中可查看）//        WxPayConfig::$key = 'NvoZmjJrvw1rawA025zrJqFUfTGcyF10'; // KEY：商户支付密钥，参考开户邮件设置（必须配置，登录商户平台自行设置）//        WxPayConfig::$appsecret = 'be1d02ecd47e3fe00c4a0d72a2ec77c9'; // 公众帐号secert（仅JSAPI支付的时候需要配置)，        WxPayConfig::$appid = 'wx3237e0ec3a6be08f'; // * APPID：绑定支付的APPID（必须配置，开户邮件中可查看）        WxPayConfig::$mchid = '1500240122'; // * MCHID：商户号（必须配置，开户邮件中可查看）        WxPayConfig::$key = 'NvoZmjJrvw1rawA025zrJqFUfTGcyF10'; // KEY：商户支付密钥，参考开户邮件设置（必须配置，登录商户平台自行设置）        WxPayConfig::$appsecret = 'bc9abc9b6df8b3bcd5419cdecdd89761'; // 公众帐号secert（仅JSAPI支付的时候需要配置)，    }    /**     * 生成支付代码     * @param   array   $order      订单信息     * @param   array   $config_value    支付方式信息     */    function get_code($order, $config_value){        //write_text($order);        $notify_url = SITE_URL.'/home/payment/notifyurl/pay_code/weixin'; // 接收微信支付异步通知回调地址，通知url必须为直接可访问的url，不能携带参数。        //var_dump($notify_url);exit;        //$notify_url = C('site_url').url('Home/Payment/notifyUrl',array('pay_code'=>'weixin')); // 接收微信支付异步通知回调地址，通知url必须为直接可访问的url，不能携带参数。        //$notify_url = C('site_url')."/index.php?m=Home&c=Payment&a=notifyUrl&pay_code=weixin";        $input = new WxPayUnifiedOrder();        $input->SetBody("订单支付"); // 商品描述        $input->SetAttach("weixin"); // 附加数据，在查询API和支付通知中原样返回，该字段主要用于商户携带订单的自定义数据        $input->SetOut_trade_no('123'); // 商户系统内部的订单号,32个字符内、可包含字母, 其他说明见商户订单号        $input->SetTotal_fee(1*100); // 订单总金额，单位为分，详见支付金额order_price        $input->SetNotify_url($notify_url); // 接收微信支付异步通知回调地址，通知url必须为直接可访问的url，不能携带参数。        $input->SetTrade_type("NATIVE"); // 交易类型   取值如下：JSAPI，NATIVE，APP，详细说明见参数规定    NATIVE--原生扫码支付        $input->SetProduct_id("123456789"); // 商品ID trade_type=NATIVE，此参数必传。此id为二维码中包含的商品ID，商户自行定义。        $notify = new NativePay();        var_dump($input);        $result = $notify->GetPayUrl($input); // 获取生成二维码的地址        var_dump($result);exit;        if ($result["code_url"]!==null){            $url2 = $result["code_url"];            $url2 = urlencode($url2);            $url2 = str_replace('%','----',$url2);            $qr_code_img=url('api/Api/qr_code',array('data'=>$url2));            //var_dump($qr_code_img);exit;            //return '<img alt="模式二扫码支付" src="/home/index/qr_code/data/'.urlencode($url2).'" style="width:110px;height:110px;"/>';            return '<img alt="模式二扫码支付" src="'.$qr_code_img.'" style="width:110px;height:110px;"/>';        }else{            //echo "<script>alert(".$result['err_code_des'].");</script>";            $msg['status']=2;            $msg['msg']=$result['err_code_des'];            return $msg;        }    }    /**     * 服务器点对点响应操作给支付接口方调用     *     */    function response(){        require_once("example/notify.php");        $notify = new PayNotifyCallBack();        $notify->Handle(false);    }    /**     * 页面跳转响应操作给支付接口方调用     */    function respond2(){        // 微信扫码支付这里没有页面返回    }    function getJSAPI($order){        //$go_url = url('home/user/index');        if ($order['type']==1){            $go_url = url('home/user/sx',array('album_id'=>$order['album_id']));            $back_url = url('home/user/sx',array('album_id'=>$order['album_id']));        }else{            $go_url = url('home/user/index');            $back_url = url('home/user/index');        }        //①、获取用户openid        $tools = new JsApiPay();        //$openId = $tools->GetOpenid();        $openId = session('openid');        //②、统一下单        $input = new WxPayUnifiedOrder();        $input->SetBody("支付订单：".$order['order_sn']);        $input->SetAttach("weixin");        $input->SetOut_trade_no($order['order_sn'].time());        $input->SetTotal_fee($order['total_amount']*100);        $input->SetTime_start(date("YmdHis"));        $input->SetTime_expire(date("YmdHis", time() + 600));        $input->SetGoods_tag("tp_wx_pay");        $input->SetNotify_url(SITE_URL.'/home/payment/notifyurl/pay_code/weixin');        $input->SetTrade_type("JSAPI");        $input->SetOpenid($openId);        $order2 = WxPayApi::unifiedOrder($input,30);        //echo '<font color="#f00"><b>统一下单支付单信息</b></font><br/>';        //printf_info($order);exit;        $jsApiParameters = $tools->GetJsApiParameters($order2);        //var_dump($jsApiParameters);exit;        $html = <<<EOF	<script type="text/javascript">	//调用微信JS api 支付	function jsApiCall()	{		WeixinJSBridge.invoke(			'getBrandWCPayRequest',$jsApiParameters,			function(res){			    //alert(res.err_msg);return false;				//WeixinJSBridge.log(res.err_msg);				 if(res.err_msg == "get_brand_wcpay_request:ok") {				    location.href='$go_url';				 }else{				 	//alert(res.err_code+res.err_desc+res.err_msg);				 	if(res.err_msg == "get_brand_wcpay_request:cancel") {				 	     alert('取消支付');				 	}				    location.href='$back_url';				 }			}		);	}	function callpay()	{		if (typeof WeixinJSBridge == "undefined"){		    if( document.addEventListener ){		        document.addEventListener('WeixinJSBridgeReady', jsApiCall, false);		    }else if (document.attachEvent){		        document.attachEvent('WeixinJSBridgeReady', jsApiCall);		        document.attachEvent('onWeixinJSBridgeReady', jsApiCall);		    }		}else{		    jsApiCall();		}	}	callpay();	</script>EOF;    return $html;    }}