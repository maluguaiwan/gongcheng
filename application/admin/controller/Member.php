<?php
namespace app\admin\controller;
use app\common\controller\AdminBase;
use think\Request;
use app\common\model\Member as MemberModel;
use app\common\model\MemberBank as MemberBankModel;
use app\common\model\MemberAddress as MemberAddressModel;
use app\common\model\MemberLevel as MemberLevelModel;
use app\common\model\MemberCoupon;

/**
 * 患者会员管理
 */

class Member extends AdminBase {
    public function initialize()
    {
        parent::initialize(); // TODO: Change the autogenerated stub

        $this->assign('sex_arr',array(
            '0'=>'保密',
            '1'=>'男',
            '2'=>'女'
        ));
    }

    /**
     * 当前模块参数
     */
    protected function _infoModule(){
        return array(
            'info'  => array(
                'name' => '患者会员管理',
                'description' => '管理网站调用患者会员',
            ),
            'menu' => array(
                array(
                    'name' => '患者会员列表',
                    'url' => url('index'),
                    'icon' => 'list',
                )
            ),
            /*'_info' => array(
                array(
                    'name' => '添加患者会员',
                    'url' => url('add'),
                )
            )*/
        );
    }
    /**
     * 列表
     */
    public function index(){
        //筛选条件
        $where = array();
        $where[]=['type','eq',1];
        $keyword = input('keyword');
        $status = input('status');
        $level_id = input('level_id');
        if(!empty($keyword)){
            $where[] = ['nickname|name|mobile','like','%'.$keyword.'%'];
        }
        if($level_id!==null){
            switch ($level_id) {
                case '1':
                    $where[] = ['level_id','eq',1];
                    break;
                case '2':
                    $where[] = ['level_id','eq',2];
                    break;
            }
        }
        //URL参数
        $pageMaps = array();
        $pageMaps['keyword'] = $keyword;
        $pageMaps['level_id'] = $level_id;
        //查询数据
        $list=model('Member')->loadList('page',$where);

        $model_level=new MemberLevelModel();
        $list_level=$model_level->order('id ASC')->select();
        $this->assign('list_level',$list_level);
        //模板传值
        $this->assign('list',$list);
        $this->assign('count',$list->total());
        $this->assign('pageMaps',$pageMaps);
        return $this->fetch();
    }
    /**
     * 患者详情
     */
    public function detail(Request $request){
        $member_id=$request->param('member_id');
        if (empty($member_id)){
            return $this->error('参数错误');
        }
        $info=MemberModel::get($member_id);
        $this->assign('info',$info);
        $model_bank=new MemberBankModel();
        $bank_info=$model_bank->where('member_id="'.$member_id.'"')->find();
        $this->assign('bank_info',$bank_info);
        $model_address=new MemberAddressModel();
        $address_info=$model_address->where('member_id="'.$member_id.'"')->find();
        $this->assign('address_info',$address_info);
        $coupons = MemberCoupon::with('coupon')->where(['member_id'=>$member_id])->select();
        if ($coupons){
            foreach ($coupons as $key=>$val){
//                $use_time=date('Y-m-d H:i',strtotime($val['create_time'])+$val['coupon']['use_length']*86400);
                $use_time=strtotime($val['create_time'])+$val['coupon']['use_length']*86400;
                $check=time()-$val['coupon']['validity_time'];//判断创建的优惠券是否过期
                if ($check>0){
                    $status=-1;
                }else{
                    $check_2=time()-$use_time;//判断发送给我的的优惠券有效期内是否过期。
                    if ($check_2>0){
                        $status=-1;
                    }else{
                        $status=date('Y-m-d H:i',$use_time);
                    }
                }
                $coupons[$key]['coupon']['use_time_zh']=$status;
            }
        }
        $this->assign('coupons',$coupons);
        return $this->fetch();
    }

    /**
     * 添加
     * @param Request $request
     * @return mixed
     */
    public function add(Request $request){
        if ($request->isPost()){
            /******************数据处理开始（可选择添加处理）*********************/
            //checkbox 以逗号分隔存入数据库
            if (!empty($_POST['ykb_input_checkbox'])){
                $_POST['ykb_input_checkbox']=implode(',',$_POST['ykb_input_checkbox']);
            }
            //多图路径以json格式存入数据库
            if (!empty($_POST['pics'])){
                $_POST['pics']=json_encode($_POST['pics']);
            }
            //时间处理
            if (!empty($_POST['ykb_date'])){
                $_POST['ykb_date']=strtotime($_POST['ykb_date']);
            }
            /******************数据处理结束*********************/
            $status=model('Member')->add();
            if($status!==false){
                return ajaxReturn(200,'操作成功',url('index'));
            }else{
                return ajaxReturn(0,'操作失败');
            }
        }else{
            return $this->fetch('info');
        }
    }

    /**
     * 修改
     * @param Request $request
     * @return mixed|\think\response\Json|void
     */
    public function edit(Request $request){
        $id=$request->param('id');
        $model = model('Member');
        if (empty($id)){
            return $this->error('参数错误!');
        }
        if ($request->isPost()){
            /******************数据处理开始（可选择添加处理）*********************/
            //checkbox 以逗号分隔存入数据库
            if (!empty($_POST['ykb_input_checkbox'])){
                $_POST['ykb_input_checkbox']=implode(',',$_POST['ykb_input_checkbox']);
            }
            //多图路径以json格式存入数据库
            if (!empty($_POST['pics'])){
                $_POST['pics']=json_encode($_POST['pics']);
            }
            //时间处理
            if (!empty($_POST['ykb_date'])){
                $_POST['ykb_date']=strtotime($_POST['ykb_date']);
            }
            /******************数据处理结束*********************/
            $status=$model->edit();
            if($status!==false){
                return ajaxReturn(200,'操作成功',url('index'));
            }else{
                return ajaxReturn(0,'操作失败');
            }
        }else{
            $info=$model->getInfo($id);
            $this->assign('info',$info);
            return $this->fetch('info');
        }
    }
    /**
     * 删除
     */
    public function del(Request $request){
        $id=$request->param('id');
        if(empty($id)){
            return ajaxReturn(0,'参数不能为空');
        }
        if(model('Member')->del($id)){
            return ajaxReturn(200,'患者会员删除成功！');
        }else{
            return ajaxReturn(0,'患者会员删除失败！');
        }
    }
}

